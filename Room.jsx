/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 room.gltf 
Author: Iman Aliakbar (https://sketchfab.com/Iman.Aliakbar)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/boy-room-19035fc846034003b76e2914ba6dd7a6
Title: Boy Room
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useSpring, a } from "@react-spring/three"

export default function Model() {
  const { nodes, materials } = useGLTF('/room.gltf')
  const [camEnabled, setCamEnabled] = useState(false)
  const positionInitial = [0, -40, 0]
  const rotationInitial = [-Math.PI / 2, 0, 0]
  const scaleInitial = 1.2;

  const handleClick = () => {
    setCamEnabled(!camEnabled);
  }

  const animarRoom = useSpring({
    rotation: camEnabled ? [-Math.PI / 2, 0, 2.8] : rotationInitial,
    position: camEnabled ? [5, -40, 60] : positionInitial,
    scale: camEnabled ? .8 : scaleInitial,
  })

  return (
    <group dispose={null}>
      <a.group rotation={animarRoom.rotation} position={animarRoom.position} scale={animarRoom.scale} >
        <mesh geometry={nodes.Object_2.geometry} material={materials.Manster_Manster_Dertish} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.Manster_Manster_lambert1SG} />
        <mesh geometry={nodes.Object_4.geometry} material={materials.Manster_boy} />
        <mesh geometry={nodes.Object_5.geometry} material={materials.Manster_mansta1} />
        <mesh geometry={nodes.Object_6.geometry} material={materials.Manster_pic1} />
        <mesh geometry={nodes.Object_7.geometry} material={materials.Manster_schrank} />
        <mesh geometry={nodes.Object_8.geometry} material={materials.Manster_toy3} />
        <mesh geometry={nodes.Object_9.geometry} material={materials.Manster_wall1} />

        <mesh position={[-70, 20, 70]}  scale={10} onClick={handleClick}>
          <boxGeometry attach="geometry" args={[.5, .5, .5]}  />
          <meshStandardMaterial attach="material" color={'#ff0000'} />
        </mesh>

        <mesh position={[15, -30, 40]}  scale={10} onClick={handleClick}>
          <boxGeometry attach="geometry" args={[.5, .5, .5]}  />
          <meshStandardMaterial attach="material" color={'#ff0000'} />
        </mesh>
        <axesHelper args={[100]} />  
      </a.group>
    </group>
  )
}

useGLTF.preload('/room.gltf')
